#DP

class Solution(object):
    def maximalSquare(self, matrix):
        """
        :type matrix: List[List[str]]
        :rtype: int
        """
        row = len(matrix)
        column = 0
        result = 0
        if row > 0:
            column = len(matrix[0])
        dp = [[0 for _ in range(column)] for _ in range(row)]
        for i in range(column) :
            dp[0][i] = 0 if matrix[0][i] == '0' else 1
            result = max(result,dp[0][i])
        for j in range(row):
            dp[j][0] = 0 if matrix[j][0] == '0' else 1
            result = max(result,dp[j][0])
        for i in range(1,row):
            for j in range(1,column):
                if matrix[i][j] == '0':
                    continue
                else:
                    temp = min(dp[i-1][j],dp[i][j-1])
                    dp[i][j] = min(temp,dp[i-1][j-1])+1
                    result = max(result,dp[i][j])
        return result*result